name: Deploy to Azure Static Web App

on:
  push:
    branches:
      - main
  workflow_dispatch:
permissions:
  id-token: write
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Build Nuxt site
        run: pnpm build
        env:
          NUXT_UI_PRO_LICENSE: ${{ secrets.NUXT_UI_PRO_LICENSE }}
          NITRO_PRESET: static # Use the static preset for Nuxt 3 to generate static files

      - name: Install infra dependencies
        run: pnpm install --dir infra

      - uses: pulumi/auth-actions@v1
        with:
          organization: TechWatching
          requested-token-type: urn:pulumi:token-type:access_token:personal
          scope: user:TechWatching

      - uses: pulumi/actions@v6
        with:
          command: up
          stack-name: techwatching/developer-conferences/prod
          work-dir: infra

      # Securely get the deployment token from Pulumi outputs
      - name: Get Static Web App Deployment Token
        id: get-token
        run: |
          # Use Pulumi CLI to get the token and mask it in logs
          TOKEN=$(cd infra && pulumi stack output staticWebAppDeploymentToken --show-secrets)
          echo "::add-mask::$TOKEN"
          echo "deployment_token=$TOKEN" >> $GITHUB_OUTPUT

      - name: Deploy to Azure Static Web App
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ steps.get-token.outputs.deployment_token }}
          action: "upload"
          app_location: ".output/public" # The location of the Nuxt generated static files
          skip_app_build: true # We've already built the app
          skip_api_build: true